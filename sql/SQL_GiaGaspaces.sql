

Tables involved in Olympus queries 
BLOOMBERG.BLOOMBERG_TZERO_OUT
BPIPE_RT.REAL_TIME
BLOOMBERG_FI.CORP_PFD_OUT
BPIPE_RT.REAL_TIME_FUTURES
BARRA.BARRA_FX_RATES_WITH_MINOR_CURRENCIES 
BLOOMBERG.BLOOMBERG_TZERO_PX_OUT_ADJUSTED
BLOOMBERG_FUTURES.SHARE_FUTURES_PRICING



---------------------------------------------------------------------------------------

Queries 





SELECT REGION,ID_BB_PARSEKEY,EXCH_CODE,NAME,CRNCY,FLEX_ID,ID_BB_GLOBAL,ID_SEDOL1,ID_SEDOL2,SECURITY_TYP,EQY_SH_OUT,ID_BB_GLOBAL_COMPANY FROM bloomberg.bloomberg_tzero_out WHERE REGION = ? AND DDATE = ?

SELECT TICKER, LAST_PRICE, DBTIMESTAMP
FROM BPIPE_RT.REAL_TIME t1
WHERE TICKER LIKE '%Curncy%'
and DATA_RECEIVED_TIMESTAMP = (SELECT MAX(DATA_RECEIVED_TIMESTAMP) FROM BPIPE_RT.REAL_TIME t2 WHERE t1.TICKER=t2.TICKER and LAST_PRICE is not null)
ORDER BY DATA_RECEIVED_TIMESTAMP DESC;

SELECT COUNTRY,CRNCY,ID_BB_GLOBAL,ID_BB_SEC_NUM_DES,EXCH_CODE,ID_SEDOL1,ID_SEDOL2,NAME,ID_BB_GLOBAL_COMPANY,AMT_OUTSTANDING,SECURITY_TYP  FROM bloomberg_fi.corp_pfd_out WHERE REGION = ? AND DATA_DATE = ? AND MARKET_SECTOR_DES = 'Pfd' AND COUNTRY IN ('US', 'CA') AND CALLED_BOOL = 'N' AND EXCH_CODE <> 'NOT LISTED'

SELECT *
FROM (SELECT REPLACE(x.TICKER, ' ELEC ', ' ') as TICKER,
      MAX(CRNCY) AS CRNCY,
      MAX(DATA_RECEIVED_TIMESTAMP) AS DATA_RECEIVED_TIMESTAMP
      FROM BPIPE_RT.REAL_TIME_FUTURES as x
             INNER JOIN (SELECT TICKER, MAX(DATA_RECEIVED_TIMESTAMP) AS MAX_TIMESTAMP
                         FROM BPIPE_RT.REAL_TIME_FUTURES
                         WHERE CRNCY IS NOT NULL
                         GROUP BY TICKER) as y ON x.DATA_RECEIVED_TIMESTAMP = MAX_TIMESTAMP and x.TICKER = y.TICKER
         GROUP BY x.TICKER) RT
       LEFT JOIN (SELECT x.FX_RATE, x.CURRENCY_CODE, x.DDATE as FX_DATE
                  FROM BARRA.BARRA_FX_RATES_WITH_MINOR_CURRENCIES AS x
                         INNER JOIN (SELECT CURRENCY_CODE, MAX(DDATE) as DDATE
                                     FROM BARRA.BARRA_FX_RATES_WITH_MINOR_CURRENCIES
                                     GROUP BY CURRENCY_CODE) y
                           ON x.CURRENCY_CODE = y.CURRENCY_CODE AND x.DDATE = y.DDATE) FX
         ON RT.CRNCY = FX.CURRENCY_CODE AND CRNCY IS NOT NULL
ORDER BY DATA_RECEIVED_TIMESTAMP;



SELECT REPLACE(x.PARSEKYABLE_DES_SOURCE, ' ELEC ', ' ') AS TICKER, MAX(PX_YEST_CLOSE) as PX_YEST_CLOSE, MAX(x.DBTIMESTAMP) as DBTIMESTAMP
FROM BLOOMBERG_FUTURES.SHARE_FUTURES_PRICING_RPX as x
       INNER JOIN (SELECT PARSEKYABLE_DES_SOURCE, MAX(DBTIMESTAMP) as MAX_TIMESTAMP
                   FROM BLOOMBERG_FUTURES.SHARE_FUTURES_PRICING_RPX
                   WHERE PX_YEST_CLOSE is not null
                     AND DATA_DATE > CURRENT_DATE - 10
    GROUP BY PARSEKYABLE_DES_SOURCE) as y
    ON x.DBTIMESTAMP = MAX_TIMESTAMP and x.PARSEKYABLE_DES_SOURCE = y.PARSEKYABLE_DES_SOURCE
WHERE PX_YEST_CLOSE is not null
GROUP BY REPLACE(x.PARSEKYABLE_DES_SOURCE, ' ELEC ', ' ')

SELECT btz.FLEX_ID, badj.CLOSE_PX_ADJ FROM bloomberg.bloomberg_tzero_out btz, bloomberg.bloomberg_tzero_px_out_adjusted badj WHERE btz.REGION = ? and btz.DDATE = ? AND btz.DDATE = badj.OPEN_DATE AND btz.ID_BB_GLOBAL = badj.ID_BB_GLOBAL


SELECT m.TICKER, m.LAST_PRICE
FROM (SELECT x.TICKER, MAX(LAST_PRICE) as LAST_PRICE
      FROM BPIPE_RT.REAL_TIME as x
             INNER JOIN (SELECT TICKER, MAX(DATA_RECEIVED_TIMESTAMP) as MAX_TIMESTAMP
                         FROM BPIPE_RT.REAL_TIME
                         WHERE LAST_PRICE is not null
                           AND LAST_PRICE > 0
                           AND DATA_DATE > CURRENT_DATE - 10
                         GROUP BY TICKER) as y
               ON x.DATA_RECEIVED_TIMESTAMP = MAX_TIMESTAMP and x.TICKER = y.TICKER
      GROUP BY x.TICKER) m
where m.ticker in ('EPRA Index','F3MNG Index','F3RETG Index','GSCBLUXL Index','GSCBMUAE Index','GSCBOSA1 Index','GSCBOSAU Index','GSCBQTAR Index','GSCBSUDN Index','GSCBUKD1 Index','GSEXACOR Index','GSEXADIS Index','GSEXCINT Index','GSEXCRP1 Index','GSEXNPTC Index','GSEXRGAS Index','GSEXRUS1 Index','GSEXSF8X Index','JP55BOV5 Index','JPEPEMMC Index','JPEPJPMC Index','JPEPKRMC Index','JPEPTHM2 Index','JPEPTWM2 Index','JPEXBOV3 Index','JPEXBOV5 Index','JPEXBOV6 Index','JPEXCAPD Index','JPEXGSFT Index','JPEXHDG2 Index','JPEXHDG7 Index','JPEXSAUD Index','JPEXSEM Index','JPEXSFT Index','JPEXTMS2 Index','JPEXTS40 Index','JPEXTS50 Index','LCXP Index','M1SAP Index','MCX Index','MCXP Index','MDAX Index','MGCUAE Index','MGCUQA Index','MSEPAPEJ Index','MSEPCNAM Index','MSEPCRD1 Index','MSEPCRD2 Index','MSEPCRWD Index','MSEPEUNT Index','MSEPGRL1 Index','MSEPHFLY Index','MSEPHIFI Index','MSEPHMOM Index','MSEPIDMA Index','MSEPLMOM Index','MSEPMOMO Index','MSEPNAOS Index','MSEPQLCY Index','MSEPSMOM Index','MSEPSMSW Index','MSEPUGRL Index','MSEPUMOL Index','MSEPUMOS Index','MSEPWTPE Index','MSQQEVLL Index','MXAE Index','MXQA Index','NDEUTHF Index','SCXP Index','SMI Index','SX3E Index','SX3P Index','SX4P Index','SX5E Index','SX6P Index','SX7E Index','SX7P Index','SX86P Index','SX8P Index','SXAP Index','SXDP Index','SXEP Index','SXFP Index','SXIP Index','SXKP Index','SXMP Index','SXNP Index','SXOP Index','SXPP Index','SXQP Index','SXRP Index','SXTP Index','SXXP Index','TSEREIT Index','UKX Index');


